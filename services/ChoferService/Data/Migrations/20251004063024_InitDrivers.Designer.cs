// <auto-generated />
using System;
using ChoferService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChoferService.Data.Migrations
{
    [DbContext(typeof(DriversDb))]
    [Migration("20251004063024_InitDrivers")]
    partial class InitDrivers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChoferService.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<short>("Availability")
                        .HasColumnType("smallint")
                        .HasColumnName("availability")
                        .HasComment("1=Disponible, 2=Ocupado, 3=FueraServicio");

                    b.Property<short>("Capabilities")
                        .HasColumnType("smallint")
                        .HasColumnName("capabilities")
                        .HasComment("1=Liviana, 2=Pesada, 3=Ambas");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("license_number");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Availability")
                        .HasDatabaseName("IX_drivers_availability");

                    b.HasIndex("Capabilities")
                        .HasDatabaseName("IX_drivers_capabilities");

                    b.HasIndex("LicenseNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_drivers_license_number_unique");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("IX_drivers_user_id_unique");

                    b.ToTable("drivers", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
