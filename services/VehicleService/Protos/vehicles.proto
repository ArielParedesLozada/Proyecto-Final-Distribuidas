syntax = "proto3";
package vehicles.v1;

option csharp_namespace = "VehiclesService.Proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service VehiclesService {
  rpc CreateVehicle (CreateVehicleRequest) returns (VehicleResponse);
  rpc GetVehicle (GetVehicleRequest) returns (VehicleResponse);
  rpc ListVehicles (ListVehiclesRequest) returns (ListVehiclesResponse);
  rpc UpdateVehicle (UpdateVehicleRequest) returns (VehicleResponse);
  rpc SetStatus (SetStatusRequest) returns (VehicleResponse);

  rpc AssignVehicle (AssignVehicleRequest) returns (AssignmentResponse);
  rpc UnassignVehicle (UnassignVehicleRequest) returns (AssignmentResponse);

  rpc GetVehicleByDriver (GetVehicleByDriverRequest) returns (VehicleResponse); // DEPRECATED: Use ListVehiclesByDriver instead
  rpc ListVehiclesByDriver (ListVehiclesByDriverRequest) returns (ListVehiclesByDriverResponse);
  rpc ListAssignmentsByDriver (ListAssignmentsByDriverRequest) returns (ListAssignmentsByDriverResponse);
  rpc ListMyVehicles (google.protobuf.Empty) returns (ListVehiclesByDriverResponse);
  rpc ListActiveAssignments (google.protobuf.Empty) returns (ListActiveAssignmentsResponse);
}

message Vehicle {
  string id = 1;
  string plate = 2;
  string type = 3;
  string brand = 4;
  string model = 5;
  int32 year = 6;
  double capacity_liters = 7;
  int32 odometer_km = 8;
  int32 status = 9; // 1=ACTIVO,2=INACTIVO,3=MANTTO,4=BAJA
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message VehicleResponse { Vehicle vehicle = 1; }

message CreateVehicleRequest {
  string plate = 1;
  string type  = 2;
  string brand = 3;
  string model = 4;
  int32 year = 5;
  double capacity_liters = 6;
  int32 odometer_km = 7;
}

message GetVehicleRequest { string id = 1; }

message ListVehiclesRequest {
  string plate = 1;
  string type = 2;
  int32 status = 3;
  int32 page = 4;
  int32 page_size = 5;
}

message ListVehiclesResponse {
  repeated Vehicle vehicles = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
  int32 total_pages = 5;
}

message UpdateVehicleRequest {
  string id = 1;
  string type  = 2;
  string brand = 3;
  string model = 4;
  int32 year = 5;
  double capacity_liters = 6;
  int32 odometer_km = 7;
}

message SetStatusRequest {
  string id = 1;
  int32 status = 2; // 1..4
}

message AssignVehicleRequest {
  string vehicle_id = 1;
  string driver_id = 2; // uuid externo (ChoferService)
}

message UnassignVehicleRequest { string vehicle_id = 1; }

message AssignmentResponse {
  string vehicle_id = 1;
  string driver_id = 2;
  google.protobuf.Timestamp assigned_at = 3;
  google.protobuf.Timestamp unassigned_at = 4;
}

message GetVehicleByDriverRequest { string driver_id = 1; }

message ListVehiclesByDriverRequest { 
  string driver_id = 1; 
}

message ListVehiclesByDriverResponse { 
  repeated Vehicle vehicles = 1; 
}

message AssignmentRow {
  string vehicle_id = 1;
  string driver_id = 2;
  google.protobuf.Timestamp assigned_at = 3;
  google.protobuf.Timestamp unassigned_at = 4; // null si sigue activo
}

message ListAssignmentsByDriverRequest { 
  string driver_id = 1; 
}

message ListAssignmentsByDriverResponse { 
  repeated AssignmentRow items = 1; 
}

message ListActiveAssignmentsResponse {
  repeated AssignmentRow active_assignments = 1;
}
